# database.bond_utils.py
from datetime import datetime, timedelta
from bot.notifications import get_bond_coupons_tinkoff
from database.moex_lookup import get_bond_coupons_from_moex


async def update_bond_coupon_info(bond, session, logger=print):
    today = datetime.utcnow()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º UTC –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏
    from_date = today
    to_date = today + timedelta(days=30)

    # –õ–æ–≥–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    logger(f"üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ Tinkoff —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: ")
    logger(f"from_date: {from_date}, to_date: {to_date}, instrumentId: {bond.figi}")

    events = []
    # –ü—Ä–æ–±—É–µ–º Tinkoff
    try:
        # –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã datetime –Ω–∞–ø—Ä—è–º—É—é
        events = await get_bond_coupons_tinkoff(bond.figi, from_date, to_date)
    except Exception as e:
        logger(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫—É–ø–æ–Ω–æ–≤ —á–µ—Ä–µ–∑ Tinkoff: {e}")

    # –§–æ–ª–±—ç–∫ –Ω–∞ MOEX
    if not events:
        try:
            events = await get_bond_coupons_from_moex(bond.isin)
        except Exception as e:
            logger(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫—É–ø–æ–Ω–æ–≤ —á–µ—Ä–µ–∑ MOEX: {e}")

    for event in events:
        event_date_str = event.get("couponDate") or event.get("COUPONDATE")
        event_amount_units = event.get("payOneBond", {}).get("units")
        event_amount_nano = event.get("payOneBond", {}).get("nano")

        if event_date_str and event_amount_units is not None and event_amount_nano is not None:
            try:
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–∞—Ç—ã –∏–∑ –æ—Ç–≤–µ—Ç–∞ –≤ –æ–±—ä–µ–∫—Ç datetime
                event_date = datetime.fromisoformat(event_date_str.replace("Z", ""))

                # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–ª–Ω—É—é —Å—É–º–º—É –∫—É–ø–æ–Ω–∞
                event_amount = int(event_amount_units) + int(event_amount_nano) / 1e9

                # –ï—Å–ª–∏ –¥–∞—Ç–∞ –∫—É–ø–æ–Ω–∞ –≤ –±—É–¥—É—â–µ–º, –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                if event_date.date() > today.date():  # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞—Ç—É –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏
                    bond.next_coupon_date = event_date.date()
                    bond.next_coupon_value = event_amount
                    session.commit()
                    break
            except Exception as e:
                logger(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫—É–ø–æ–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è: {e}")